[app]
prefix = app
target_namespace = 

android_headers = -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.7/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.8/include
android_flags = -D_SIZE_T_DEFINED_ 

clang_headers = -I%(clangllvmdir)s/lib/clang/3.3/include 
clang_flags = -nostdinc -x c++ -std=c++11 -U __SSE__

cocos_headers = -I%(cocosdir)s -I%(cocosdir)s/cocos -I%(cocosdir)s/cocos/platform/android -I%(cocosdir)s/extensions -I%(cocosdir)s/external -I%(cocosdir)s/external/tinyxml2 -I%(cocosdir)s/external/sqlite3/include -I%(cocosdir)s/cocos/audio/include -I%(cocosdir)s/cocos/editor-support -I%(mycocosdir)s/../Genius -I%(mycocosdir)s/../Genius/ECS 

cocos_flags = -DANDROID

cxxgenerator_headers = 

extra_arguments = %(android_headers)s %(clang_headers)s %(cxxgenerator_headers)s %(cocos_headers)s %(android_flags)s %(clang_flags)s %(cocos_flags)s %(extra_flags)s 

# ========================================================
headers = %(mycocosdir)s/../Genius/JSBHeaders.h 

classes = Singleton Log LoadingManager SceneManager RollNumberLabel EntityCreator PawnBlackboard EntityWrapper WorldWrapper IComponent ComTransfrom ComBoxCollider ComColliderHandler ComAnimation ComTeam ComTarget ComParticle ComBezierMovement ComDelayTrackMovement ComPawnAgent ComPawnAnim ComPawnDebugDraw ComPawnDirection ComPawnFight ComPawnNavigation ComPawnBevtree ComBulletAgent ComBulletAnimArrow ComBulletAnimBase ComBulletAnimBomb ComBulletDamageNone ComBulletDamageScope ComBulletDamageSingle ComBulletDebugDraw ComBulletAnimEgg  

# the format ClassName::[function function]. If you want to skip a whole class, just add a single "*" as functions. 
# A special class name is "*", which will apply to all class names. This is a convenience wildcard to be able to skip similar namedfunctions from all classes.
skip = SceneManager::[new HandleEvent],
		IComponent::[new Init GetOwner],
		ComTransfrom::[new],
		ComBoxCollider::[new], 
		ComColliderHandler::[new], 
		ComAnimation::[new], 
		ComTeam::[new], 
		ComTarget::[new], 
		ComParticle::[new], 
		ComBezierMovement::[new], 
		ComDelayTrackMovement::[new], 
		ComPawnAgent::[new], 
		ComPawnAnim::[new],
		ComPawnDebugDraw::[new], 
		ComPawnDirection::[new], 
		ComPawnFight::[new], 
		ComPawnNavigation::[new], 
		ComPawnBevtree::[new], 
		ComBulletAgent::[new], 
		ComBulletAnimArrow::[new], 
		ComBulletAnimBase::[new], 
		ComBulletAnimBomb::[new], 
		ComBulletDamageNone::[new], 
		ComBulletDamageScope::[new], 
		ComBulletDamageSingle::[new], 
		ComBulletDebugDraw::[new], 
		ComBulletAnimEgg::[new]


rename_functions = 
rename_classes = EntityWrapper::Entity,WorldWrapper::World
remove_prefix = 
classes_have_no_parents = WorldWrapper SceneManager ComPawnAnim 
base_classes_to_skip = 
abstract_classes = Singleton IComponent 

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = no

